#******************************************************************************#
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: stephane <stephane@student.42.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/01/13 12:30:17 by svogrig           #+#    #+#              #
#    Updated: 2024/02/02 15:02:57 by stephane         ###   ########.fr        #
#                                                                              #
#******************************************************************************#

#------------------------------------------------------------------------------#
# variables libraries                                                          #
#------------------------------------------------------------------------------#

LIBS		:=	ft
LIBFT_DIR	:=	libft
LIBS_TARGET	:=	$(LIBFT_DIR)/libft.a

LDFLAGS		:=	$(addprefix -L,$(dir $(LIBS_TARGET)))
LDLIBS		:=	$(addprefix -l,$(LIBS))

#------------------------------------------------------------------------------#
# variables globals                                                            #
#------------------------------------------------------------------------------#

BUILD_DIR	:=	.build

CC			:=	cc

CFLAGS		:=	-Wall -Wextra -Werror
CPPFLAGS	:=	$(addprefix -I,$(INCS)) -MMD -MP

RM          :=	rm -f
MAKEFLAGS   +=	--no-print-directory
DIR_DUP		=	mkdir -p $(@D)

#------------------------------------------------------------------------------#
# variables push_swap                                                          #
#------------------------------------------------------------------------------#

NAME        :=  push_swap

INCS		:=	include \
				$(LIBFT_DIR)/include

SRC_DIR		:=	src

SRCS		:=	lis.c \
				moves.c \
				moves_build.c \
				move_atob.c \
				move_btoa.c \
				operation_push.c \
				operation_reverse_rotate.c \
				operation_rotate.c \
				operation_swap.c \
				parsing.c \
				position_in_list.c\
				list.c \
				stack.c \
				index.c \
				sort.c

PS_SRCS		:=	main.c $(SRCS)
PS_SRCS		:=	$(PS_SRCS:%=$(SRC_DIR)/%)

OBJS		:=	$(PS_SRCS:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)

DEPS		:=	$(OBJS:.o=.d)

# variables checker -----------------------------------------------------------#
NAME_BONUS	:=	checker

SRCS_BONUS	:=	main_bonus.c \
				operation_push.c \
				operation_reverse_rotate.c \
				operation_rotate.c \
				operation_swap.c \
				parsing.c \
				push_swap_list.c \
				stack.c

SRCS_BONUS	:=	$(SRCS_BONUS:%=$(SRC_DIR)/%)

OBJS_BONUS	:=	$(SRCS_BONUS:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)

DEPS_BONUS	:=	$(OBJS_BONUS:.o=.d)

#------------------------------------------------------------------------------#
# variables unit test                                                          #
#------------------------------------------------------------------------------#

NAME_UT		:=	$(NAME)_unitest

SRCS_UT_DIR	:= 	unitest

SRCS_UT		:=	main.c \
				psut_data.c \
				tests/arg_to_stack_tests.c \
				tests/ps_list_new_tests.c \
				tests/number_to_stack_tests.c \
				tests/si32_to_decstr_offset_tests.c \
				tests/psut_list_to_str_tests.c \
				tests/swap_head_tests.c \
				tests/push_tests.c \
				tests/reverse_rotate_tests.c \
				tests/rotate_tests.c \
				tests/is_sorted_tests.c \
				tests/ps_index_tests.c

SRCS_UT		:=	$(SRCS_UT:%=$(SRCS_UT_DIR)/%)
SRCS_UT		:=	$(SRCS) $(SRCS_UT) 
SRCS_UT		:=	$(SRCS_UT:%=$(SRC_DIR)/%)

OBJS_UT		:=	$(SRCS_UT:$(SRC_DIR)/%.c=$(BUILD_DIR)/%.o)

DEPS_UT		:=	$(OBJS_UT:.o=.d)

#------------------------------------------------------------------------------#
# rules                                                                        #
#------------------------------------------------------------------------------#

all: $(NAME)

bonus: $(NAME_BONUS)

unitest: $(NAME_UT)

$(NAME): $(OBJS) $(LIBS_TARGET)
	$(CC) $(LDFLAGS) -o $(NAME) $(OBJS) $(LDLIBS)
	$(info created: $(NAME))
	
$(NAME_BONUS): $(OBJS_BONUS) $(LIBS_TARGET)
	$(CC) $(LDFLAGS) -o $(NAME_BONUS) $(OBJS_BONUS) $(LDLIBS)
	$(info created: $(NAME_BONUS))

$(NAME_UT): $(OBJS_UT) $(LIBS_TARGET)
	$(CC) $(LDFLAGS) -o $(NAME_UT) $(OBJS_UT) $(LDLIBS)
	$(info created: $(NAME_UT))

$(LIBS_TARGET):
	$(MAKE) -C $(@D)

$(BUILD_DIR)/%.o: $(SRC_DIR)/%.c
	$(DIR_DUP)
	$(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $< 
	$(info created: $@)

-include $(DEPS) $(DEPS_BONUS) $(DEPS_UT)

clean:
	$(MAKE) -C $(dir $(LIBS_TARGET)) clean
	$(RM) $(OBJS) $(DEPS) 
	$(RM) $(OBJS_BONUS) $(DEPS_BONUS) 
	$(RM) $(OBJS_UT) $(DEPS_UT)

fclean: clean
	$(MAKE) -C $(dir $(LIBS_TARGET)) fclean
	$(RM) $(NAME) $(NAME_UT)

re:
	$(MAKE) fclean
	$(MAKE) all

run: all
	-./$(NAME)

run_unitest: unitest
	-./$(NAME_UT)

#------------------------------------------------------------------------------#
# specifications                                                               #
#------------------------------------------------------------------------------#

.PHONY: clean fclean re run
.SILENT:
